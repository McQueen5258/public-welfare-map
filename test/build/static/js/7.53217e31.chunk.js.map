{"version":3,"sources":["../node_modules/@material-ui/core/Link/linkClasses.js","../node_modules/@material-ui/core/Link/Link.js","components/Title.js","../node_modules/@material-ui/utils/esm/useIsFocusVisible.js","../node_modules/@material-ui/core/utils/useIsFocusVisible.js","../node_modules/@material-ui/core/Typography/typographyClasses.js","../node_modules/@material-ui/core/Typography/Typography.js"],"names":["getLinkUtilityClass","slot","generateUtilityClass","linkClasses","generateUtilityClasses","_excluded","colorTransformations","primary","textPrimary","secondary","textSecondary","error","LinkRoot","styled","Typography","name","overridesResolver","props","styles","ownerState","root","capitalize","underline","component","button","theme","color","getPath","transformDeprecatedColors","_extends","textDecoration","textDecorationColor","alpha","undefined","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","focusVisible","Link","React","inProps","ref","useThemeProps","className","onBlur","onFocus","TypographyClasses","variant","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current","useStyles","makeStyles","textAlign","paddingTop","paddingBottom","title","fontFamily","fontSize","letterSpacing","lineHeight","subtitle","width","maxWidth","aboutNav","display","flexFlow","justifyContent","alignItems","transition","borderTop","aboutA","fontWeight","textTransform","Title","align","href","hadKeyboardEvent","hadFocusVisibleRecently","hadFocusVisibleRecentlyTimeout","inputTypesWhitelist","text","search","url","tel","email","password","number","date","month","week","time","datetime","handleKeyDown","metaKey","altKey","ctrlKey","handlePointerDown","handleVisibilityChange","this","visibilityState","isFocusVisible","target","matches","node","type","tagName","readOnly","isContentEditable","focusTriggersKeyboardModality","doc","ownerDocument","addEventListener","window","clearTimeout","setTimeout","getTypographyUtilityClass","TypographyRoot","noWrap","gutterBottom","paragraph","typography","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","themeProps","extendSxProp","variantMapping","Component","as"],"mappings":"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","file":"static/js/7.53217e31.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha, getPath } from '@material-ui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const color = getPath(theme, `palette.${transformDeprecatedColors(ownerState.color)}`) || ownerState.color;\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && {\n    textDecoration: 'underline',\n    textDecorationColor: color !== 'inherit' ? alpha(color, 0.4) : undefined,\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }, ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import React from \"react\";\nimport { Typography, Link } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: \"center\",\n    paddingTop: \"6.5612792969em\",\n    paddingBottom: \"1.1008em\",\n  },\n  title: {\n    fontFamily: \"Nocturno Display\",\n    fontSize: \"5.2490234375em\",\n    letterSpacing: \"-.03em\",\n    paddingTop: \".07em\",\n    lineHeight: \"1.25\",\n    margin: \".5636096em 0\",\n    /* fontWeight: '400' */\n  },\n  subtitle: {\n    fontFamily: \"Nocturno Display\",\n    fontSize: \".88064em\",\n    width: \"29.1579559669em\",\n    maxWidth: \"calc(100vw - 8.39844em)\",\n    lineHeight: \"1.72em\",\n    margin: \"1.376em auto\"\n  },\n  aboutNav: {\n    margin: \"2.15em auto\",\n    display: \"flex\",\n    flexFlow: \"column nowrap\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    width: \"20.0234353542em\",\n    maxWidth: \"100%\",\n    transition: \"width .3s ease\",\n    borderTop: \"1px solid #eaeaea\",\n    paddingTop: \"1.1008em\",\n  },\n  aboutA: {\n    fontWeight: \"500\",\n    fontSize: \".704512em\",\n    /* color: \"#565f62\", */\n    letterSpacing: \".2em\",\n    textAlign: \"center\",\n    textTransform: \"uppercase\",\n  }\n}));\n\nfunction Title() {\n  const classes = useStyles();\n  return (\n    <header className={classes.root}>\n      <Typography variant=\"h1\" className={classes.title}>To Serve Better</Typography>\n      <Typography className={classes.subtitle} align=\"center\" variant=\"\">\n        Stories of people committed to public purpose and to making a positive\n        difference in communities throughout the country.\n      </Typography>\n      <nav className={classes.aboutNav}>\n        <Link className={classes.aboutA} href=\"\">ABOUT THE PROJECT</Link>\n      </nav>\n    </header>\n  );\n}\n\nexport default Title;\n","// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\nimport * as React from 'react';\nlet hadKeyboardEvent = true;\nlet hadFocusVisibleRecently = false;\nlet hadFocusVisibleRecentlyTimeout = null;\nconst inputTypesWhitelist = {\n  text: true,\n  search: true,\n  url: true,\n  tel: true,\n  email: true,\n  password: true,\n  number: true,\n  date: true,\n  month: true,\n  week: true,\n  time: true,\n  datetime: true,\n  'datetime-local': true\n};\n/**\n * Computes whether the given element should automatically trigger the\n * `focus-visible` class being added, i.e. whether it should always match\n * `:focus-visible` when focused.\n * @param {Element} node\n * @returns {boolean}\n */\n\nfunction focusTriggersKeyboardModality(node) {\n  const {\n    type,\n    tagName\n  } = node;\n\n  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {\n    return true;\n  }\n\n  if (tagName === 'TEXTAREA' && !node.readOnly) {\n    return true;\n  }\n\n  if (node.isContentEditable) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\n * If the most recent user interaction was via the keyboard;\n * and the key press did not include a meta, alt/option, or control key;\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\n * @param {KeyboardEvent} event\n */\n\n\nfunction handleKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n\n  hadKeyboardEvent = true;\n}\n/**\n * If at any point a user clicks with a pointing device, ensure that we change\n * the modality away from keyboard.\n * This avoids the situation where a user presses a key on an already focused\n * element, and then clicks on a different element, focusing it with a\n * pointing device, while we still think we're in keyboard modality.\n */\n\n\nfunction handlePointerDown() {\n  hadKeyboardEvent = false;\n}\n\nfunction handleVisibilityChange() {\n  if (this.visibilityState === 'hidden') {\n    // If the tab becomes active again, the browser will handle calling focus\n    // on the element (Safari actually calls it twice).\n    // If this tab change caused a blur on an element with focus-visible,\n    // re-apply the class when the user switches back to the tab.\n    if (hadFocusVisibleRecently) {\n      hadKeyboardEvent = true;\n    }\n  }\n}\n\nfunction prepare(doc) {\n  doc.addEventListener('keydown', handleKeyDown, true);\n  doc.addEventListener('mousedown', handlePointerDown, true);\n  doc.addEventListener('pointerdown', handlePointerDown, true);\n  doc.addEventListener('touchstart', handlePointerDown, true);\n  doc.addEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nexport function teardown(doc) {\n  doc.removeEventListener('keydown', handleKeyDown, true);\n  doc.removeEventListener('mousedown', handlePointerDown, true);\n  doc.removeEventListener('pointerdown', handlePointerDown, true);\n  doc.removeEventListener('touchstart', handlePointerDown, true);\n  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nfunction isFocusVisible(event) {\n  const {\n    target\n  } = event;\n\n  try {\n    return target.matches(':focus-visible');\n  } catch (error) {// Browsers not implementing :focus-visible will throw a SyntaxError.\n    // We use our own heuristic for those browsers.\n    // Rethrow might be better if it's not the expected error but do we really\n    // want to crash if focus-visible malfunctioned?\n  } // No need for validFocusTarget check. The user does that by attaching it to\n  // focusable events only.\n\n\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\n}\n\nexport default function useIsFocusVisible() {\n  const ref = React.useCallback(node => {\n    if (node != null) {\n      prepare(node.ownerDocument);\n    }\n  }, []);\n  const isFocusVisibleRef = React.useRef(false);\n  /**\n   * Should be called if a blur event is fired\n   */\n\n  function handleBlurVisible() {\n    // checking against potential state variable does not suffice if we focus and blur synchronously.\n    // React wouldn't have time to trigger a re-render so `focusVisible` would be stale.\n    // Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.\n    // This doesn't work in IE11 due to https://github.com/facebook/react/issues/3751\n    // TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).\n    if (isFocusVisibleRef.current) {\n      // To detect a tab/window switch, we look for a blur event followed\n      // rapidly by a visibility change.\n      // If we don't see a visibility change within 100ms, it's probably a\n      // regular focus change.\n      hadFocusVisibleRecently = true;\n      window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n      hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {\n        hadFocusVisibleRecently = false;\n      }, 100);\n      isFocusVisibleRef.current = false;\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Should be called if a blur event is fired\n   */\n\n\n  function handleFocusVisible(event) {\n    if (isFocusVisible(event)) {\n      isFocusVisibleRef.current = true;\n      return true;\n    }\n\n    return false;\n  }\n\n  return {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref\n  };\n}","import { unstable_useIsFocusVisible as useIsFocusVisible } from '@material-ui/utils';\nexport default useIsFocusVisible;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@material-ui/system';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;"],"sourceRoot":""}