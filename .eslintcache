[{"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/index.js":"1","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/App.js":"2","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/redux/store.js":"3","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/Bar.js":"4","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/Browse.js":"5","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/redux/rootReducer.js":"6","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/views/Home/index.js":"7","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/ChinaMap.js":"8","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/Title.js":"9","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/Sidebar.js":"10","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/Contents.js":"11","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/redux/slices/publicWelfare.js":"12","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/redux/slices/ChinaMap.js":"13","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/Card.js":"14","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/Introduce.jsx":"15","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/icon/index.js":"16","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/article/index.js":"17","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/article/Text.js":"18","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/article/TitleImage.js":"19","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/redux/slices/files.js":"20"},{"size":581,"mtime":1639564848309,"results":"21","hashOfConfig":"22"},{"size":1729,"mtime":1639758473859,"results":"23","hashOfConfig":"22"},{"size":462,"mtime":1639564848322,"results":"24","hashOfConfig":"22"},{"size":2009,"mtime":1639564848294,"results":"25","hashOfConfig":"22"},{"size":6906,"mtime":1639794483672,"results":"26","hashOfConfig":"22"},{"size":1069,"mtime":1639808917434,"results":"27","hashOfConfig":"22"},{"size":1944,"mtime":1639809043432,"results":"28","hashOfConfig":"22"},{"size":11759,"mtime":1639564848298,"results":"29","hashOfConfig":"22"},{"size":1772,"mtime":1639564848304,"results":"30","hashOfConfig":"22"},{"size":3087,"mtime":1639793797717,"results":"31","hashOfConfig":"22"},{"size":2323,"mtime":1639809926543,"results":"32","hashOfConfig":"22"},{"size":1252,"mtime":1639808692614,"results":"33","hashOfConfig":"22"},{"size":1101,"mtime":1639564848319,"results":"34","hashOfConfig":"22"},{"size":2181,"mtime":1639564848297,"results":"35","hashOfConfig":"22"},{"size":1072,"mtime":1639793784121,"results":"36","hashOfConfig":"22"},{"size":2831,"mtime":1639564848308,"results":"37","hashOfConfig":"22"},{"size":114,"mtime":1639564848307,"results":"38","hashOfConfig":"22"},{"size":728,"mtime":1639564848305,"results":"39","hashOfConfig":"22"},{"size":580,"mtime":1639813499303,"results":"40","hashOfConfig":"22"},{"size":1217,"mtime":1639808790578,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7s9k45",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/index.js",[],"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/App.js",[],"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/redux/store.js",[],"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/Bar.js",[],"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/Browse.js",[],"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/redux/rootReducer.js",[],"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/views/Home/index.js",["87"],"import React, { lazy, Suspense, useEffect } from 'react';\nimport { Hidden, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { getPublicWelfareData } from '../../redux/slices/publicWelfare';\nimport { getPublicWelfareFiles } from '../../redux/slices/files';\nimport { getChinaMapData } from '../../redux/slices/ChinaMap';\nconst Title = lazy(() => import('../../components/Title'));\nconst Maps = lazy(() => import('../../components/ChinaMap'));\nconst Sidebar = lazy(() => import('../../components/Sidebar'));\nconst Content = lazy(() => import('../../components/Contents'));\n\n// ----------------------------------------------------------------\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  middlePart: {\n    display: 'flex',\n    flexDirection: 'row',\n    position: 'relative'\n  }\n}));\n\n//----------------------------------------------------------------\n\nfunction HomeView({ handleDrawerToggle }) {\n  const classes = useStyles();\n  // const { publicWelfareData } = useSelector((state) => state.publicWelfare);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPublicWelfareData());\n    dispatch(getPublicWelfareFiles());\n    dispatch(getChinaMapData());\n  }, [dispatch]);\n\n  return (\n    <Suspense fallback={<div></div>}>\n      <Title />\n      {/* <Maps /> */}\n      <Box\n        className={classes.middlePart}\n        data-bs-spy=\"scroll\"\n        data-bs-target=\"#navbar-example\"\n      >\n        <Hidden smDown>\n          <Sidebar\n            id=\"navbar-example\"\n            handleDrawerToggle={() => handleDrawerToggle()}\n          />\n        </Hidden>\n        <Content />\n      </Box>\n    </Suspense>\n  );\n}\n\nHomeView.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func\n};\n\nexport default HomeView;\n","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/ChinaMap.js",["88","89","90"],"import React, { useState, useEffect, useRef } from 'react';\nimport { select, geoMercator, geoPath, json } from 'd3';\n// import * as topojson from \"topojson\";\nimport Card from './Card';\nimport { makeStyles } from '@material-ui/styles';\n/*\n * // TODO 可添加坐标 √\n * // TODO 地图剧中 √\n * // TODO 响应式 √\n * // TODO 设置颜色 √(后续改更好看的)\n * // TODO 坐标样式\n * // TODO 限制地图的大小\n * // TODO 使用TopoJson修复GeoJson的问题\n */\n// ----------------------------------------------------------------\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%'\n  },\n  div: {\n    maxWidth: '1400px',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n  cardRoot: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'white',\n    display: 'flex',\n    flexDirection: 'row',\n    userSelect: 'none',\n    color: 'black'\n  },\n  cardContent: {\n    height: '100%',\n    width: '70%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '0 20px'\n  },\n  cardContentText: {\n    margin: '0'\n  },\n  subtitle1: {\n    fontSize: '1rem',\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: '400',\n    lineHeight: '1.75',\n    letterSpacing: '0.00938em'\n  },\n  subtitle2: {\n    fontSize: '0.875rem',\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: '500',\n    lineHeight: '1.57',\n    letterSpacing: '0.00714em'\n  },\n  cardFounder: {\n    color: 'rgb(165, 36, 56)'\n  },\n  cardPlaceName: {\n    color: 'rgb(87, 91, 102)'\n  },\n  cardImg: {\n    height: '100%',\n    width: '30%',\n    // backgroundImage: \"url(Images/Kido/Logo/Kido.png)\",\n    backgroundSize: '80%',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat'\n  }\n}));\n\n// ----------------------------------------------------------------\n\nfunction ChinaMap() {\n  const classes = useStyles();\n  const [locking, setLocking] = useState(false);\n  const d3Map = useRef();\n\n  const handleClick = (projectId, event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      `#${projectId}`\n    );\n    if (anchor) {\n      anchor.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      });\n    }\n    // handleDrawerToggle();\n  };\n\n  useEffect(() => {\n    /***** 1.初始化 *****/\n    // 画板大小\n    const SIZE = {\n      width: 1200,\n      height: 1000,\n      margin: {\n        top: 10,\n        right: 10,\n        bottom: 10,\n        left: 10\n      }\n    };\n\n    const svg = select(d3Map.current);\n\n    const g = svg\n      .append('g')\n      .attr('transform', `translate(${SIZE.margin.top}, ${SIZE.margin.left})`);\n\n    // 黑板(投影方式)\n    const projection = geoMercator()\n      .center([107, 31])\n      .scale(900)\n      .translate([SIZE.width / 2, SIZE.height / 2]);\n\n    // 地理路径生成器\n    const path = geoPath().projection(projection);\n\n    /***** 2.画地图 *****/\n    async function draw() {\n      /***** 1.引入中国地图数据 *****/\n      const Maps = {};\n      try {\n        // do something\n        Maps.map1 = await json('/Map/ChinaData.geo.json');\n        Maps.map2 = await json('/Map/data.ali.json'); // ? 无法兼容我的代码\n        Maps.map3 = await json('/Map/data.jiangshukeji.json'); // ? 无法兼容我的代码\n      } catch (err) {\n        // do something\n        return console.error(err);\n      }\n\n      /***** 2.将地图投射到页面上 *****/\n      // 1.显示地图表面\n      g.selectAll('g')\n        .data(Maps.map1.features)\n        .enter()\n        .append('g')\n        .append('path')\n        .attr('d', path)\n        .attr('stroke', '#d8d7d7')\n        .attr('stroke-width', 1)\n        // .attr(\"opacity\", 0.6)\n        .attr('fill', 'white')\n        .append('title')\n        .text((d) => d.properties.name);\n\n      /***** 3.标坐标(place) *****/\n      async function spot() {\n        /***** 1.引入公益坐标(places) *****/\n        let places = {};\n        try {\n          // do something\n          places = await json('/Data/PublicWelfareCoordinates/data.geo.json');\n        } catch (err) {\n          // do something\n          return console.error(err);\n        }\n\n        /***** 2.将公益地点添加到地图上 *****/\n\n        // g.selectAll('use')\n        //   .data(places.points)\n        //   .enter()\n        //   .append('use')\n        //   .attr('id', 'mapCoordinates')\n        //   .attr('xlink:href', '#mapCoordinates')\n        //   .attr('x', (d) => {\n        //     let peking = d.geometry.coordinates;\n        //     let proPeking = projection(peking);\n        //     return proPeking[0]/0;\n        //   })\n        //   .attr('y', (d) => {\n        //     let peking = d.geometry.coordinates;\n        //     let proPeking = projection(peking);\n        //     return proPeking[1]/0;\n        //   })\n        // .attr('width', '10')\n        // .attr('height', '50');\n\n        g.append('g')\n          .selectAll('image')\n          .data(places.points)\n          .enter()\n          .append('g')\n          .attr('id', (d) => `map-${d.name}`)\n          .each(function (d) {\n            console.log(select(this));\n            const g = select(this)\n              .append('g')\n              .attr('id', `point-${d.name}`)\n              .on('mouseover', (e, d) => {\n                select(`#point-${d.name}-circle`)\n                  .transition()\n                  .style('opacity', 0.5)\n                  .duration(500);\n\n                select(`#point-${d.name}-card`)\n                  .transition()\n                  .style('opacity', 1)\n                  .duration(500);\n              })\n              .on('mouseout', function (e, d) {\n                select(`#point-${d.name}-circle`)\n                  .transition()\n                  .style('opacity', 0)\n                  .duration(500);\n\n                select(`#point-${d.name}-card`)\n                  .transition()\n                  .style('opacity', 0)\n                  .duration(500);\n              })\n              .on('click', (e, { name }) => handleClick(name, e));\n            g.append('circle')\n              .attr('id', `point-${d.name}-circle`)\n              .attr('class', `point-${d.name}-icon`)\n              .attr('cx', (d) => {\n                let peking = d.geometry.coordinates;\n                let proPeking = projection(peking);\n                return proPeking[0];\n              })\n              .attr('cy', (d) => {\n                let peking = d.geometry.coordinates;\n                let proPeking = projection(peking);\n                return proPeking[1] - 25 / 2;\n              })\n              .attr('r', 25)\n              .attr('fill', '#33c9dc')\n              .style('opacity', 0);\n\n            g.append('image')\n              .attr('id', `point-${d.name}-image`)\n              .attr('class', `point-${d.name}-icon`)\n              .attr('x', (d) => {\n                let peking = d.geometry.coordinates;\n                let proPeking = projection(peking);\n                return proPeking[0] - 25 / 2;\n              })\n              .attr('y', (d) => {\n                let peking = d.geometry.coordinates;\n                let proPeking = projection(peking);\n                return proPeking[1] - 25;\n              })\n              .attr('xlink:href', '固定坐标点.svg')\n              .attr('width', '25px')\n              .attr('height', '25px')\n              .attr('fill', 'blue')\n              .attr('class', 'point');\n\n            select(this)\n              .append('foreignObject')\n              .attr('id', `point-${d.name}-card`)\n              .attr('class', `point-${d.name}-icon`)\n              .style('opacity', 0)\n              .style('pointer-events', 'none')\n              .attr('x', (d) => {\n                let peking = d.geometry.coordinates;\n                let proPeking = projection(peking);\n                return proPeking[0] + 25 / 2;\n              })\n              .attr('y', (d) => {\n                let peking = d.geometry.coordinates;\n                let proPeking = projection(peking);\n                return proPeking[1] - 25 / 4;\n              })\n              .attr('width', '400px')\n              .attr('height', '130px')\n              .style('box-shadow', 'rgb(92 99 105 / 20%) 0px 0px 20px 3px')\n              .append('xhtml:div')\n              .attr('class', classes.cardRoot)\n              .attr('xmlns', 'http://www.w3.org/1999/xhtml')\n              .each(function (d) {\n                select(this)\n                  .append('xhtml:div')\n                  .attr('class', classes.cardContent)\n                  .each(function (d) {\n                    select(this)\n                      .append('xhtml:p')\n                      .attr(\n                        'class',\n                        `${classes.cardContentText} ${classes.subtitle1}`\n                      )\n                      .text((d) => d?.properties?.vision);\n\n                    select(this)\n                      .append('xhtml:p')\n                      .attr(\n                        'class',\n                        `${classes.cardContentText} ${classes.subtitle2}`\n                      )\n                      .each(function (d) {\n                        select(this)\n                          .append('xhtml:span')\n                          .attr('class', classes.cardFounder)\n                          .text(d?.properties?.founder);\n\n                        select(this)\n                          .append('xhtml:span')\n                          .attr('class', classes.cardPlaceName)\n                          .text(\n                            `, ${d?.properties?.position?.province} ${d?.properties?.position?.city}`\n                          );\n                      });\n                  });\n                select(this)\n                  .append('xhtml:div')\n                  .attr('class', classes.cardImg)\n                  .style(\n                    'background-image',\n                    `url(${d?.properties?.titleLogo})`\n                  );\n              });\n          });\n\n        // g.selectAll('circle')\n        //   .data(places.points)\n        //   .enter()\n        //   .append('circle')\n        //   .attr('cx', (d) => {\n        //     let peking = d.geometry.coordinates;\n        //     let proPeking = projection(peking);\n        //     return proPeking[0];\n        //   })\n        //   .attr('cy', (d) => {\n        //     let peking = d.geometry.coordinates;\n        //     let proPeking = projection(peking);\n        //     return proPeking[1];\n        //   })\n        //   .attr('fill', 'blue')\n        //   .attr('class', 'point')\n        //   .attr('r', 6)\n        //   .attr('d', path)\n        //   .on('mouseover', function (e, d) {\n        //     const circle = e.path[0];\n        //     circle.setAttribute('r', 12);\n        //     const { clientWidth } = cardCom.current;\n        //     const left =\n        //       document.body.clientWidth - (e.pageX + 3) - clientWidth <= 0\n        //         ? e.pageX + 3 - clientWidth\n        //         : e.pageX + 3;\n        //     return setCard({\n        //       ...card,\n        //       visibility: true,\n        //       top: e.pageY + 8,\n        //       left: left,\n        //       properties: d.properties\n        //     });\n        //   })\n        //   .on('mouseout', function (e, d) {\n        //     const circle = e.path[0];\n        //     circle.setAttribute('r', 6);\n        //     return setCard({ ...card, visibility: false });\n        //   });\n      }\n      spot();\n    }\n    draw();\n  }, [locking]);\n  return (\n    <div id=\"map\" className={classes.root}>\n      <div className={classes.div}>\n        <svg ref={d3Map} viewBox={`0 0 1200 1000`}></svg>\n      </div>\n    </div>\n  );\n}\n\nexport default ChinaMap;\n","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/Title.js",[],"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/Sidebar.js",[],"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/Contents.js",[],"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/redux/slices/publicWelfare.js",["91"],"import axios from 'axios';\n// import { filter, map } from 'lodash';\nimport { createSlice } from '@reduxjs/toolkit';\nimport AV from 'leancloud-storage';\n\nconst initialState = {\n  error: '',\n  isLoading: false,\n  publicWelfare: null,\n  publicWelfareData: []\n};\n\nconst slice = createSlice({\n  name: 'publicWelfare',\n  initialState,\n  reducers: {\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    getPublicWelfareSuccess(state, action) {\n      state.isLoading = false;\n      state.publicWelfareData = action.payload;\n    }\n  }\n});\n\n// Reducer\nexport default slice.reducer;\n\n// Actions\nexport const { hasError } = slice.actions;\n\n// ----------------------------------------------------------------\n\nexport function getPublicWelfareData() {\n  return async (dispatch) => {\n    dispatch(slice.actions.startLoading());try {\n      const query = new AV.Query('publicWelfare');\n      query\n        .find()\n        .then((response) => {\n          dispatch(slice.actions.getPublicWelfareSuccess(response));\n        })\n        .catch((err) => {\n          dispatch(slice.actions.hasError(err.message));\n        });\n    } catch (error) {}\n  };\n}\n","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/redux/slices/ChinaMap.js",[],"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/Card.js",[],"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/Introduce.jsx",["92"],"import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\n// ----------------------------------------------------------------\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '300px',\n    width: '70%'\n  },\n  line: {\n    borderTop: '1px solid #eaeaea'\n  },\n  name: {\n    height: '70%',\n    backgroundSize: '70%',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat'\n    // backgroundImage: 'url(Images/Kido/Logo/Kido.png)'\n  }\n}));\n\n// ----------------------------------------------------------------\n\nexport default function Introduce({ data }) {\n  const classes = useStyles();\n  const { name, position, logo } = data;\n  const { city, district } = position;\n  const { attributes } = logo;\n  return (\n    <div className={classes.root}>\n      <h1>{city + district}</h1>\n      <div className={classes.line}></div>\n      <div\n        className={classes.name}\n        style={{ backgroundImage: `url(${attributes?.url})` }}\n      >\n        {name}\n      </div>\n    </div>\n  );\n}\n","/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/icon/index.js",[],"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/article/index.js",[],"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/article/Text.js",[],"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/components/article/TitleImage.js",[],"/Users/kido/Documents/Eric's/Code/public-welfare/public-welfare-map/src/redux/slices/files.js",["93"],"import axios from 'axios';\n// import { filter, map } from 'lodash';\nimport { createSlice } from '@reduxjs/toolkit';\nimport AV from 'leancloud-storage';\n\nconst initialState = {\n  error: '',\n  isLoading: false,\n  publicWelfare: null,\n  publicWelfareFiles: []\n};\n\nconst slice = createSlice({\n  name: 'files',\n  initialState,\n  reducers: {\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    getFilesSuccess(state, action) {\n      state.isLoading = false;\n      state.publicWelfareFiles = action.payload;\n    }\n  }\n});\n\n// Reducer\nexport default slice.reducer;\n\n// Actions\nexport const { hasError } = slice.actions;\n\n// ----------------------------------------------------------------\n\nexport function getPublicWelfareFiles() {\n  return async (dispatch) => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const query = new AV.Query('_File');\n      query.find().then((response) => {\n        console.log('response: ', response);\n        dispatch(slice.actions.getFilesSuccess(response));\n      });\n    } catch (error) {\n      dispatch(slice.actions.hasError(error.message));\n    }\n  };\n}\n",{"ruleId":"94","severity":1,"message":"95","line":10,"column":7,"nodeType":"96","messageId":"97","endLine":10,"endColumn":11},{"ruleId":"94","severity":1,"message":"98","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":12},{"ruleId":"94","severity":1,"message":"99","line":80,"column":19,"nodeType":"96","messageId":"97","endLine":80,"endColumn":29},{"ruleId":"100","severity":1,"message":"101","line":365,"column":6,"nodeType":"102","endLine":365,"endColumn":15,"suggestions":"103"},{"ruleId":"94","severity":1,"message":"104","line":1,"column":8,"nodeType":"96","messageId":"97","endLine":1,"endColumn":13},{"ruleId":"94","severity":1,"message":"105","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":20},{"ruleId":"94","severity":1,"message":"104","line":1,"column":8,"nodeType":"96","messageId":"97","endLine":1,"endColumn":13},"no-unused-vars","'Maps' is assigned a value but never used.","Identifier","unusedVar","'Card' is defined but never used.","'setLocking' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'classes.cardContent', 'classes.cardContentText', 'classes.cardFounder', 'classes.cardImg', 'classes.cardPlaceName', 'classes.cardRoot', 'classes.subtitle1', and 'classes.subtitle2'. Either include them or remove the dependency array.","ArrayExpression",["106"],"'axios' is defined but never used.","'Typography' is defined but never used.",{"desc":"107","fix":"108"},"Update the dependencies array to be: [classes.cardContent, classes.cardContentText, classes.cardFounder, classes.cardImg, classes.cardPlaceName, classes.cardRoot, classes.subtitle1, classes.subtitle2, locking]",{"range":"109","text":"110"},[11277,11286],"[classes.cardContent, classes.cardContentText, classes.cardFounder, classes.cardImg, classes.cardPlaceName, classes.cardRoot, classes.subtitle1, classes.subtitle2, locking]"]