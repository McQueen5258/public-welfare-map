{"version":3,"sources":["../node_modules/@material-ui/core/esm/Typography/Typography.js","components/article/TitleImage.js","components/article/Text.js","components/Contents.js"],"names":["defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","props","ref","_props$align","align","classes","className","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","capitalize","withStyles","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","useStyles","makeStyles","titleImg","TitleImage","src","alt","title","Title","content","Text","minHeight","border","alignSelf","flexDirection","alignItems","paragraphs","Content","properties","article","ComponentSwitch","object","index","type","art","typographys","Box","sx","flexGrow","p","map","ArticleContent","id","Contents","data","useSelector","state","publicWelfare","publicWelfareData"],"mappings":"wHAAA,0DA2IIA,EAAwB,CAC1BC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,UAAW,KACXC,UAAW,KACXC,MAAO,IACPC,MAAO,KAELC,EAA0BC,cAAiB,SAAoBC,EAAOC,GACxE,IAAIC,EAAeF,EAAMG,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBC,EAAeN,EAAMO,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAYR,EAAMQ,UAClBC,EAAiBT,EAAMU,QACvBA,OAA6B,IAAnBD,EAA4B,UAAYA,EAClDE,EAAsBX,EAAMY,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAgBb,EAAMc,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAmBf,EAAMgB,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAiBjB,EAAMkB,QACvBA,OAA6B,IAAnBD,EAA4B,QAAUA,EAChDE,EAAwBnB,EAAMoB,eAC9BA,OAA2C,IAA1BD,EAAmChC,EAAwBgC,EAC5EE,EAAQC,YAAyBtB,EAAO,CAAC,QAAS,UAAW,YAAa,QAAS,YAAa,UAAW,eAAgB,SAAU,YAAa,UAAW,mBAE7JuB,EAAYf,IAAcQ,EAAY,IAAMI,EAAeF,IAAY/B,EAAsB+B,KAAa,OAC9G,OAAoBnB,gBAAoBwB,EAAWC,YAAS,CAC1DnB,UAAWoB,YAAKrB,EAAQsB,KAAMrB,EAAuB,YAAZa,GAAyBd,EAAQc,GAAoB,YAAVX,GAAuBH,EAAQ,QAAQuB,OAAOC,YAAWrB,KAAUO,GAAUV,EAAQU,OAAQF,GAAgBR,EAAQQ,aAAcI,GAAaZ,EAAQY,UAAqB,YAAVb,GAAuBC,EAAQ,QAAQuB,OAAOC,YAAWzB,KAAsB,YAAZO,GAAyBN,EAAQ,UAAUuB,OAAOC,YAAWlB,MACvXT,IAAKA,GACJoB,OA0EUQ,iBApPK,SAAgBC,GAClC,MAAO,CAELJ,KAAM,CACJK,OAAQ,GAIVlC,MAAOiC,EAAME,WAAWnC,MAGxBD,MAAOkC,EAAME,WAAWpC,MAGxBqC,QAASH,EAAME,WAAWC,QAG1BC,OAAQJ,EAAME,WAAWE,OAGzB9C,GAAI0C,EAAME,WAAW5C,GAGrBC,GAAIyC,EAAME,WAAW3C,GAGrBC,GAAIwC,EAAME,WAAW1C,GAGrBC,GAAIuC,EAAME,WAAWzC,GAGrBC,GAAIsC,EAAME,WAAWxC,GAGrBC,GAAIqC,EAAME,WAAWvC,GAGrBC,UAAWoC,EAAME,WAAWtC,UAG5BC,UAAWmC,EAAME,WAAWrC,UAG5BwC,SAAUL,EAAME,WAAWG,SAG3BC,OAAQ,CACNC,SAAU,WACVC,OAAQ,EACRC,MAAO,EACPC,SAAU,UAIZC,UAAW,CACTC,UAAW,QAIbC,YAAa,CACXD,UAAW,UAIbE,WAAY,CACVF,UAAW,SAIbG,aAAc,CACZH,UAAW,WAIb5B,OAAQ,CACN0B,SAAU,SACVM,aAAc,WACdC,WAAY,UAIdnC,aAAc,CACZoC,aAAc,UAIhBhC,UAAW,CACTgC,aAAc,IAIhBC,aAAc,CACZ1C,MAAO,WAIT2C,aAAc,CACZ3C,MAAOuB,EAAMqB,QAAQC,QAAQC,MAI/BC,eAAgB,CACd/C,MAAOuB,EAAMqB,QAAQI,UAAUF,MAIjCG,iBAAkB,CAChBjD,MAAOuB,EAAMqB,QAAQM,KAAKL,SAI5BM,mBAAoB,CAClBnD,MAAOuB,EAAMqB,QAAQM,KAAKF,WAI5BI,WAAY,CACVpD,MAAOuB,EAAMqB,QAAQS,MAAMP,MAI7BQ,cAAe,CACbnD,QAAS,UAIXoD,aAAc,CACZpD,QAAS,YAoHmB,CAChCqD,KAAM,iBADOlC,CAEZ/B,I,0HCxPGkE,EAAYC,aAAW,SAACnC,GAAD,MAAY,CACvCoC,SAAU,CACR3B,MAAO,YASI4B,EALI,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACdhE,EAAU4D,IAChB,OAAO,qBAAK3D,UAAWD,EAAQ8D,SAAUE,IAAKA,EAAKC,IAAI,M,SCPnDL,EAAYC,aAAW,SAACnC,GAAD,MAAY,CACvCwC,MAAO,GACPtD,UAAW,CAACuB,MAAO,WAKrB,SAASgC,EAAT,GAA6B,IAAZC,EAAW,EAAXA,QACTpE,EAAU4D,IAChB,OACE,cAAClE,EAAA,EAAD,CAAYkB,WAAS,EAACE,QAAQ,KAAKb,UAAWD,EAAQkE,MAAtD,SACGE,IAKP,SAASC,EAAT,GAA4B,IAAZD,EAAW,EAAXA,QACRpE,EAAU4D,IAChB,OACE,cAAClE,EAAA,EAAD,CAAYkB,WAAS,EAACX,UAAWD,EAAQY,UAAzC,SACGwD,ICpBP,IAAMR,EAAYC,aAAW,SAACnC,GAAD,MAAY,CACvCJ,KAAM,CACJgD,UAAW,QAEXC,OAAQ,oBACRC,UAAW,SACXrC,MAAO,QAETiC,QAAS,CACP9D,QAAS,OACTmE,cAAe,SACfC,WAAY,UAGdZ,SAAU,CACR3B,MAAO,QAETwC,WAAY,CACVrE,QAAS,OACTmE,cAAe,SACfD,UAAW,cAUf,SAASI,EAAT,GAAwC,IAArBC,EAAoB,EAApBA,WAAYlB,EAAQ,EAARA,KACvB3D,EAAU4D,IACRkB,EAAYD,EAAZC,QAYR,SAASC,EAAgBC,EAAQC,GAC/B,IAAQC,EAAgCF,EAAhCE,KAAMlB,EAA0BgB,EAA1BhB,IAAKmB,EAAqBH,EAArBG,IAAKC,EAAgBJ,EAAhBI,YACxB,MAAgB,iBAATF,EACL,cAAC,EAAD,CAAwBlB,IAAKA,EAAKC,IAAKkB,GAAtBF,GAEjB,cAACI,EAAA,EAAD,CACEC,GAAI,CACFC,SAAU,EACVC,EAAG,IAHP,gBAOGJ,QAPH,IAOGA,OAPH,EAOGA,EAAaK,KAAI,SAACT,EAAQC,GACzB,OAvBR,SAAwBD,EAAQC,GAC9B,IAAQC,EAAkBF,EAAlBE,KAAMd,EAAYY,EAAZZ,QAEd,MAAgB,UAATc,EACL,cAACf,EAAD,CAAmBC,QAASA,GAAhBa,GAEZ,cAACZ,EAAD,CAAkBD,QAASA,GAAhBa,GAiBAS,CAAeV,EAAQC,OAH3BA,GAQX,OACE,cAACI,EAAA,EAAD,CAAKpF,UAAWD,EAAQoE,QAASuB,GAAIhC,EAArC,SACGmB,EAAQW,KAAI,SAACT,EAAQC,GACpB,OAAOF,EAAgBC,EAAQC,QAMxB,SAASW,IACtB,IAAM5F,EAAU4D,IACWiC,EAASC,aAClC,SAACC,GAAD,OAAWA,EAAMC,iBADXC,kBAGR,OACE,qBAAKhG,UAAWD,EAAQsB,KAAxB,SACGuE,EAAKJ,KAAI,WAAuBR,GAAW,IAA/BJ,EAA8B,EAA9BA,WAAYlB,EAAkB,EAAlBA,KACvB,OAAO,cAACiB,EAAD,CAAqBC,WAAYA,EAAYlB,KAAMA,GAArCsB","file":"static/js/9.558ae88c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\n// ----------------------------------------------------------------\n\nconst useStyles = makeStyles((theme) => ({\n  titleImg: {\n    width: '100%'\n  }\n}));\n\nconst TitleImage = ({ src }) => {\n  const classes = useStyles();\n  return <img className={classes.titleImg} src={src} alt=\"\" />;\n};\n\nexport default TitleImage;\n","import { Typography } from '@material-ui/core';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\n\n// ----------------------------------------------------------------\n\nconst useStyles = makeStyles((theme) => ({\n  title: {},\n  paragraph: {width: '75%'}\n}));\n\n// ----------------------------------------------------------------\n\nfunction Title({ content }) {\n  const classes = useStyles();\n  return (\n    <Typography paragraph variant=\"h4\" className={classes.title}>\n      {content}\n    </Typography>\n  );\n}\n\nfunction Text({ content }) {\n  const classes = useStyles();\n  return (\n    <Typography paragraph className={classes.paragraph}>\n      {content}\n    </Typography>\n  );\n}\n\nexport { Title, Text };\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Box } from '@material-ui/core';\nimport { TitleImage, Title, Text } from './article';\n\nimport { makeStyles } from '@material-ui/styles';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: '100vh',\n    // width: \"100%\",\n    border: '1px solid #eaeaea',\n    alignSelf: 'center',\n    width: '100%'\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  // title: { width: \"75%\" },\n  titleImg: {\n    width: '100%'\n  },\n  paragraphs: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignSelf: 'center'\n  }\n  // paragraph: {\n  //   width: \"70%\",\n  //   alignSelf: \"center\",\n  // },\n}));\n\n// ---------------------------------------------------------------\n\nfunction Content({ properties, name }) {\n  const classes = useStyles();\n  const { article } = properties;\n\n  function ArticleContent(object, index) {\n    const { type, content } = object;\n\n    return type === 'title' ? (\n      <Title key={index} content={content} />\n    ) : (\n      <Text key={index} content={content} />\n    );\n  }\n\n  function ComponentSwitch(object, index) {\n    const { type, src, art, typographys } = object;\n    return type === 'titlePicture' ? (\n      <TitleImage key={index} src={src} alt={art} />\n    ) : (\n      <Box\n        sx={{\n          flexGrow: 1,\n          p: 10\n        }}\n        key={index}\n      >\n        {typographys?.map((object, index) => {\n          return ArticleContent(object, index);\n        })}\n      </Box>\n    );\n  }\n  return (\n    <Box className={classes.content} id={name}>\n      {article.map((object, index) => {\n        return ComponentSwitch(object, index);\n      })}\n    </Box>\n  );\n}\n\nexport default function Contents() {\n  const classes = useStyles();\n  const { publicWelfareData: data } = useSelector(\n    (state) => state.publicWelfare\n  );\n  return (\n    <div className={classes.root}>\n      {data.map(({ properties, name }, index) => {\n        return <Content key={index} properties={properties} name={name} />;\n      })}\n    </div>\n  );\n}\n"],"sourceRoot":""}