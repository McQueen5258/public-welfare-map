{"version":3,"sources":["components/Contents.js","../node_modules/@material-ui/core/Typography/typographyClasses.js","../node_modules/@material-ui/core/Typography/Typography.js"],"names":["useStyles","makeStyles","theme","root","minHeight","border","alignSelf","蝌蚪实务学堂","display","flexDirection","alignItems","titleImg","width","paragraphs","Contents","classes","className","src","alt","sx","flexGrow","p","paragraph","variant","title","component","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","props","styles","ownerState","align","capitalize","noWrap","gutterBottom","_extends","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","Typography","React","inProps","ref","themeProps","useThemeProps","color","transformDeprecatedColors","extendSxProp","variantMapping","other","_objectWithoutPropertiesLoose","Component","slots","composeClasses","useUtilityClasses","_jsx","as","clsx"],"mappings":"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","file":"static/js/8.26256f82.chunk.js","sourcesContent":["import React from \"react\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100vh\",\n    // width: \"100%\",\n    border: \"1px solid #eaeaea\",\n    alignSelf: \"center\",\n  },\n  蝌蚪实务学堂: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  // title: { width: \"75%\" },\n  titleImg: {\n    width: \"100%\",\n  },\n  paragraphs: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignSelf: \"center\",\n  },\n  // paragraph: {\n  //   width: \"70%\",\n  //   alignSelf: \"center\",\n  // },\n}));\n// TODO 新建可以添加每个公益项目的单个内容组件\nexport default function Contents() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Box className={classes.蝌蚪实务学堂}>\n        <img className={classes.titleImg} src=\"./Images/Kido/640.webp\" alt=\"\" />\n        {/* 有意义的话 */}\n        <Box\n          sx={{\n            flexGrow: 1,\n            p: 10\n          }}\n        >\n          <Typography paragraph variant=\"h4\" className={classes.title}>\n            \"使命和愿景是：探索青少年职业发展新路径，为好的社会培养“珍贵的普通人”。\"\n          </Typography>\n          <Box\n            component=\"main\"\n            sx={{\n              flexGrow: 1,\n              p: 3\n              // width: { sm: `calc(100% - ${drawerWidth}px)` },\n            }}\n            className={classes.paragraphs}\n          >\n            <Typography paragraph className={classes.paragraph}>\n              实务学堂是一个面向 16-18\n              岁农民（工）子女的非学历职业教育公益项目，2018\n              年3月创立于北京，2020年迁址广州市海珠区小洲村。\n            </Typography>\n            <Typography paragraph className={classes.paragraph}>\n              创办三年多，受到了广泛的社会关注，得到各界的肯定与资助，并开始向社会输出毕业生或在校实习生，积累了良好的口碑和社会影响力。\n            </Typography>\n            <Typography paragraph className={classes.paragraph}>\n              未来 2-3 年，实务学堂计划每年招收 20-30 名学生。2021\n              年秋季招生已经启动，欢迎咨询。\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n    </div>\n  );\n}\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@material-ui/system';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;"],"sourceRoot":""}