{"version":3,"sources":["App.js"],"names":["Bar","lazy","Browse","Title","Maps","Sidebar","Content","useStyles","makeStyles","theme","root","middlePart","display","flexDirection","position","App","props","window","useState","mobileOpen","setMobileOpen","handleDrawerToggle","container","undefined","document","body","useEffect","AOS","init","duration","classes","dispatch","useDispatch","getPublicWelfareData","getChinaMapData","fallback","variant","open","onClose","ModalProps","keepMounted","className","smDown","id"],"mappings":"kPASMA,EAAMC,gBAAK,kBAAM,uDACjBC,EAASD,gBAAK,kBAAM,+DAEpBE,EAAQF,gBAAK,kBAAM,iCACnBG,EAAOH,gBAAK,kBAAM,wDAClBI,EAAUJ,gBAAK,kBAAM,wDACrBK,EAAUL,gBAAK,kBAAM,iCAIrBM,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACNC,WAAY,CACVC,QAAS,OACTC,cAAe,MACfC,SAAU,gBAiFCC,UA5Ef,SAAaC,GACX,IAAQC,EAAWD,EAAXC,OACR,EAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAqB,WACzBD,GAAeD,IAGXG,OACOC,IAAXN,EAAuB,kBAAMA,IAASO,SAASC,WAAOF,EAExDG,qBAAU,WACRC,IAAIC,KAAK,CACPC,SAAU,UAQd,IAAMC,EAAUvB,IAEVwB,EAAWC,cAOjB,OALAN,qBAAU,WACRK,EAASE,eACTF,EAASG,iBACR,CAACH,IAGF,8BACE,eAAC,WAAD,CAAUI,SAAU,wBAApB,UACE,cAACnC,EAAD,CAAKqB,mBAAoBA,IACzB,cAAC,IAAD,CACEC,UAAWA,EACXc,QAAQ,YACRC,KAAMlB,EACNmB,QAASjB,EACTkB,WAAY,CACVC,aAAa,GANjB,SASE,cAACtC,EAAD,CAAQmB,mBAAoBA,MAG9B,eAAC,IAAD,WACE,cAAClB,EAAD,IACA,cAACC,EAAD,IACA,eAAC,IAAD,CACEqC,UAAWX,EAAQnB,WACnB,cAAY,SACZ,iBAAe,kBAHjB,UAKE,cAAC,IAAD,CAAQ+B,QAAM,EAAd,SACE,cAACrC,EAAD,CACEsC,GAAG,iBACHtB,mBAAoB,kBAAMA,SAG9B,cAACf,EAAD","file":"static/js/11.85230ff7.chunk.js","sourcesContent":["import { lazy, Suspense, useState, useEffect } from 'react';\nimport { Box, Drawer, Hidden } from '@material-ui/core';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport { useDispatch } from 'react-redux';\nimport { getPublicWelfareData } from './redux/slices/publicWelfare';\nimport { getChinaMapData } from './redux/slices/ChinaMap';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nconst Bar = lazy(() => import('./components/Bar'));\nconst Browse = lazy(() => import('./components/Browse'));\n// const HomeView = lazy(() => import('./views/Home/index'));\nconst Title = lazy(() => import('./components/Title'));\nconst Maps = lazy(() => import('./components/ChinaMap'));\nconst Sidebar = lazy(() => import('./components/Sidebar'));\nconst Content = lazy(() => import('./components/Contents'));\n\n// ----------------------------------------------------------------\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  middlePart: {\n    display: 'flex',\n    flexDirection: 'row',\n    position: 'relative'\n  }\n}));\n\n// ----------------------------------------------------------------\nfunction App(props) {\n  const { window } = props;\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  useEffect(() => {\n    AOS.init({\n      duration: 1500\n      // easing: 'ease-out-back',\n      // delay: 600,\n      // disable: 'phone'\n      // throttleDelay: -999\n    });\n  });\n\n  const classes = useStyles();\n  // const { publicWelfareData } = useSelector((state) => state.publicWelfare);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPublicWelfareData());\n    dispatch(getChinaMapData());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Suspense fallback={<div></div>}>\n        <Bar handleDrawerToggle={handleDrawerToggle} />\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true // Better open performance on mobile.\n          }}\n        >\n          <Browse handleDrawerToggle={handleDrawerToggle} />\n        </Drawer>\n\n        <Box>\n          <Title />\n          <Maps />\n          <Box\n            className={classes.middlePart}\n            data-bs-spy=\"scroll\"\n            data-bs-target=\"#navbar-example\"\n          >\n            <Hidden smDown>\n              <Sidebar\n                id=\"navbar-example\"\n                handleDrawerToggle={() => handleDrawerToggle()}\n              />\n            </Hidden>\n            <Content />\n          </Box>\n        </Box>\n      </Suspense>\n    </div>\n  );\n}\n\nApp.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func\n};\n\nexport default App;\n"],"sourceRoot":""}